#!/bin/sh
set -x

if [ `whoami` = "jenkins" ]
then
    SSH_IDENTITY=~/.ssh/id_rsa
else
    SSH_IDENTITY=~/.ssh/virginia.pem
fi

mkdir bin

echo "Building client with go"
go build -o bin/client client/client.go

if [ $? -ne 0 ]
then
    echo "Client build failed, exiting"
    exit 1   
fi

echo "Building server with go"
go build -o bin/server server/server.go

if [ $? -ne 0 ]
then
    echo "Server build failed, exiting"
    exit 1   
fi

echo "Performing unit test"
python2.4 script/clienttest.py
if [ $? -ne 0 ]
then
    echo "IRC Server unit test failed, exiting"
    exit 1   
fi

FIRSTARG="$(echo $1 | tr '[:upper:]' '[:lower:]')"

if [ "${FIRSTARG}" = "dev-deploy" ]
then
    DEPLOY_BOX="ec2-54-227-84-172.compute-1.amazonaws.com"
elif [ "${FIRSTARG}" = "prod-deploy" ]
then
    DEPLOY_BOX="ec2-50-19-201-81.compute-1.amazonaws.com"
elif [ "${FIRSTARG}" = "unittest" ]
then
    echo "Local Unit Tests Passed"
    exit 0
else
    echo "Unknown build command"
    exit 0		
fi

#For now use the branch name to determine who to deploy to
#Eventually jenkins will have a different build script based on branch versus master!
BRANCH=`git status | grep -o "Your branch is behind"`
echo Branch: ${BRANCH}
if [ "${BRANCH}" = "Your branch is behind" ] 
then
    echo "Testing on branch" 
    DEPLOY_BOX="ec2-54-227-84-172.compute-1.amazonaws.com"
else
    echo "Testing on master" #this is broken 
    DEPLOY_BOX="ec2-50-19-201-81.compute-1.amazonaws.com"
    echo "Testing on branch" 
    DEPLOY_BOX="ec2-54-227-84-172.compute-1.amazonaws.com"
fi

echo "Deploying to: ${DEPLOY_BOX}"

# Deployment
ssh -i $SSH_IDENTITY ubuntu@${DEPLOY_BOX} "killall -9 server"

scp -i $SSH_IDENTITY bin/server ubuntu@${DEPLOY_BOX}:
if [ $? -ne 0 ]
then
    echo "Server deploy failed, exiting"
    exit 1   
fi

scp -i $SSH_IDENTITY script/startgo.sh ubuntu@${DEPLOY_BOX}:
if [ $? -ne 0 ]
then
    echo "Server script deploy failed, exiting"
    exit 1
fi

ssh -i $SSH_IDENTITY ubuntu@${DEPLOY_BOX} "./startgo.sh"

if [ $? -ne 0 ]
then
    echo "SSH of server to test box failed, exiting"
    exit 1
fi

python2.4 script/clienttest.py ${DEPLOY_BOX}
if [ $? -ne 0 ]
then
    echo "IRC Server system test failed, exiting"
    exit 1   
fi

echo "Deployment completed successfully"

exit 0
